openapi: 3.0.0
info:
  title: User story Microservice
  version: 1.0.0
  description: Documentation for User story Microservice.
  contact:
    name: Team Morpheus
    email: skuma251@asu.edu
servers:
  - url: http://localhost:3003
  - url: http://localhost:8080
paths:
  /createUserstory:
    post:
      summary: Performing post operation to create user story.
      description: Post operations on user story.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: number
                  example: 711904
                subject:
                  type: string
                  example: Test User story
              required:
                - project
                - subjectcd
      responses:
        "200":
          description: User story successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Test User story successfully created.
                  userstoryId:
                    type: number
                    example: 4498807
        "500":
          description: Error creating user story
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error creating userstory
      tags:
        - user story
        
  /updateUserstory:
    post:
      summary: Performing post operation to update a given user story.
      description: Post operations on user story.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Taiga username
                  example: SERtestuser
                password:
                  type: string
                  description: Taiga password
                  example: testuser
                projectname:
                  type: string
                  description: Project name
                  example: testProject
                userstoryname:
                  type: string
                  description: UserStory name
                  example: test US3
                tags:
                  type: object
                  description: tags to be associated with the user story
                  example: ["new-feature", "low-priority"]
                storypoints:
                  type: object
                  description: role name and associated sotry points
                  example: { "UX": 1, "Backend" : 5}
                description:
                  type: string
                  description: description to be added to user story
                  example: "This is a testing user story"


              required:
                - username
                - password
                - projectname
                - userstoryname
      responses:
        "200":
          description: User story details successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User Story with  id 4505087 successfully updated
                  userstoryId:
                    type: number
                    example: 4505087
        "500":
          description: Error updating user story
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Something went wrong while updating userstory or UserStory not found 
      tags:
        - user story
  
  /getUserStoryBySlug:
    get:
      summary: Get UserStory details by slug name
      description: Get userstory details by providing the username, password, project name and userstory name in the request body. Slug name will be formed by combining the username and project name.
      parameters:
        - name: username
          in: query
          required: true
          description: Taiga username
          schema:
            type: string
        - name: password
          in: query
          required: true
          description: Taiga password
          schema:
            type: string
        - name: projectname
          in: query
          required: true
          description: Project name
          schema:
            type: string
        - name: userstory name
          in: query
          required: true
          description: UserStory name
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: successfully fetched details
                  parameters:
                    type: object
                    example: { "id": 4505087,"version": 24, "ref": 5}

        "404":
          description: UserStory not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User Story not found
      tags:
        - user story

  /getUserStory:
    get:
      summary: Get UserStory for a project
      description: Get userstory by providing the username, password, project name in the request query param.
      parameters:
        - name: username
          in: query
          required: true
          description: Taiga username
          schema:
            type: string
        - name: password
          in: query
          required: true
          description: Taiga password
          schema:
            type: string
        - name: projectName
          in: query
          required: true
          description: Project name
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  parameters:
                    type: object
                    example: { "id": 4505087,"subject": "test US"}

        "404":
          description: UserStory not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User Story not found
      tags:
        - user story
